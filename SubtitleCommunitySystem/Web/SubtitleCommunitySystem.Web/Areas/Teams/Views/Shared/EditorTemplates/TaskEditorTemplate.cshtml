@using SubtitleCommunitySystem.Model

@model SubtitleCommunitySystem.Web.Areas.Teams.Models.TaskInputModel

@Html.ValidationSummary(true, "", new { @class = "text-danger" })
@Html.HiddenFor(model => model.Id)
@Html.HiddenFor(model => model.SubtitleId)
<div class="">
    @Html.EditorFor(m => m.UserId)
    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "col-md-3" })
    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "" } })
    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
</div>
<hr />
<div class="">

    @Html.LabelFor(model => model.PercentDone, htmlAttributes: new { @class = "col-md-3" })
    @Html.EditorFor(model => model.PercentDone, new { htmlAttributes = new { @class = "" } })
    @Html.ValidationMessageFor(model => model.PercentDone, "", new { @class = "text-danger" })
</div>
<hr />

<div class="">

    @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "col-md-3" })
    @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "" } })
    @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
</div>
<hr />

<div class="">

    @Html.LabelFor(model => model.IsFinished, htmlAttributes: new { @class = "col-md-3" })
    @Html.EditorFor(model => model.IsFinished)
    @Html.ValidationMessageFor(model => model.IsFinished, "", new { @class = "text-danger" })
</div>
<hr />

<div>
    @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "col-md-3" })
    @(Html.Kendo().DropDownListFor(m => m.Type)
            .BindTo(EnumHelper.GetSelectList(typeof(SubtitleTaskType))))
</div>

<div>
    @(Html.Kendo().DropDownListFor(m => m.Type)
        .Name("Type").HtmlAttributes(new { style = "display:none;" })
            .BindTo(EnumHelper.GetSelectList(typeof(SubtitleTaskType))))
</div>
<hr />


<script>
    function filterType() {
        return {
            typeId: $("#Type").val()
        };
    }
</script>
<script>
    function onSelectedUser() {
        var user = $("#UserS");
        $("#UserId").val(user.val());
        $("#UserId").change();
    }
</script>

<div class="users">
    @Html.Label("Users", htmlAttributes: new { @class = "col-md-3" })
    @(Html.Kendo().DropDownList()
              .Name("UserS")
              .DataTextField("UserName")
              .DataValueField("Id")
              .DataSource(source =>
              {
                  source.Read(read =>
                  {
                      read.Action("GetCascadeUsers", "Tasks", new { teamId = ViewBag.Id })
                          .Data("filterType");
                  })
                  .ServerFiltering(true);
              })
              .Events(c => c.Select("onSelectedUser").DataBound("onSelectedUser").Open("onSelectedUser").Change("onSelectedUser"))
              .CascadeFrom("Type"))
</div>

<script>
    kendo.culture("en-GB");
    $('#DateCreated').removeAttr("data-val-date");
    $('#DueDate').removeAttr("data-val-date");
</script>


