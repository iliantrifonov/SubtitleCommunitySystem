@model IEnumerable<SubtitleOutputModel>

@{
    ViewBag.Title = "Team Subtitles";
}

<h2>Team "@ViewBag.TeamName" Subtitles</h2>

@(Html.Kendo().Grid<SubtitleOutputModel>()
    .Name("grid")
    .Columns(columns =>
        {
            columns.Bound(c => c.MovieMainPosterUrl)
                .ClientTemplate("<a href='/Teams/Subtitles/Details/#=Id#?teamId=#=TeamId#'><img src='#=MovieMainPosterUrl#' alt='#:MovieName#' style='max-width:80px' /></a>")
                .Filterable(false)
                .Sortable(false);
            
            columns.Bound(c => c.MovieName).HtmlAttributes(new { @class = "col-md-3" })
                .Filterable(ftb => ftb.Cell(cell => cell.Operator("contains")))
                .ClientTemplate("<a class='' href='/Teams/Subtitles/Details/#=Id#?teamId=#=TeamId#'>#:MovieName#</a>"); 
            
            columns.Bound(c => c.State).HtmlAttributes(new { @class = "col-md-3" })
                .Filterable(ftb => ftb.Cell(cell => cell.Operator("contains")));
            
            columns.Bound(c => c.IsFinished)
                .ClientTemplate("<span>#= IsFinished ? 'Yes' : 'No'#</span>");
            
            columns.Bound(c => c.Language).HtmlAttributes(new { @class = "col-md-3" })
                .Filterable(false)
                .Sortable(false); 
        })
        .Sortable()
        .Filterable(ftb => ftb.Mode(GridFilterMode.Row))
        .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(5))
        .DataSource(data => data.Ajax()
            .Read("ReadTeamSubtitles", "Subtitles", new { id = ViewBag.Id })
            .Model(m => m.Id("Id")))
)

