@model SubtitleCommunitySystem.Web.Areas.Administration.Models.EditUserViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ApplicationUser</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.User.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.User.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.User.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <ul>
            @foreach (var g in Model.TeamRoles)
            {
                <li>
                    <input type="checkbox"
                           name="selectedGroups" value="@g.Id" id="@g.Id"
                           @foreach (var r in Model.User.TeamRoles) { if (r.Name == g.Name) { { <text> checked='checked' </text>      } break; } } />
                    <label for="@g.Id">@g.Name</label>
                </li>
            }
        </ul>

        @Html.DisplayFor(c => Model.User.Teams, "ListTeamViewModel")

        <hr />
        @{ Html.RenderPartial("_EditButtonsPartial"); }
    </div>
}

@section messages {
    @if (TempData["Success"] != null)
    {
        @Html.DisplayFor(c => TempData["Success"], "SuccessMessage")
    }
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
